{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import API from '../api';\n// import NewsForm from '../components/NewsForm';\n// import NewsList from '../components/NewsList';\n// import { useNavigate } from 'react-router-dom';\n// const NewsPage = () => {\n//   const [news, setNews] = useState([]);\n//   const [recommendedNews, setRecommendedNews] = useState([]);\n//   const [userId, setUserId] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))._id : null);\n//   const navigate = useNavigate();\n//   const fetchNews = async () => {\n//     try {\n//       const res = await API.get('/news');\n//       setNews(res.data);\n//     } catch (err) {\n//       alert('Ошибка при загрузке новостей');\n//     }\n//   };\n//   const fetchRecommendations = async () => {\n//     if (!userId) return;\n//     try {\n//       const res = await API.get(`/news/recommendations/${userId}`);\n//       setRecommendedNews(res.data);\n//     } catch (err) {\n//       alert('Ошибка при получении рекомендаций');\n//     }\n//   };\n//   const handleAdd = async (article) => {\n//     try {\n//       await API.post('/news', article);\n//       fetchNews();\n//     } catch (err) {\n//       alert('Не удалось добавить новость');\n//     }\n//   };\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/news/${id}`);\n//       fetchNews();\n//     } catch (err) {\n//       alert('Не удалось удалить новость');\n//     }\n//   };\n//   const handleLogout = () => {\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n//     navigate('/login');\n//   };\n//   useEffect(() => {\n//     fetchNews();\n//     fetchRecommendations();\n//   }, [userId]);\n//   return (\n//     <div style={{ maxWidth: 800, margin: 'auto' }}>\n//       <h2>Новости</h2>\n//       <button onClick={handleLogout}>Выйти</button>\n//       <button onClick={() => API.get('/1/journal').catch(console.error)}>\n//         Проверить доступ\n//         </button>\n//       <h3>Рекомендованные новости</h3>\n//       <NewsList \n//         news={news} \n//         onDelete={handleDelete}\n//         onAddToJournal={fetchRecommendations} // Обновляем рекомендации после добавления\n//         showAddButton={true}\n//         showDeleteButton={false}\n//         />\n//       <h3>Все новости</h3>\n//       <NewsForm onAdd={handleAdd} />\n//       <NewsList news={news} onDelete={handleDelete} userId={userId} />\n//     </div>\n//   );\n// };\n// export default NewsPage;\nimport React from'react';import NewsFeed from'../components/NewsFeed';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NewsPage=()=>{return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:800,margin:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"}),/*#__PURE__*/_jsx(NewsFeed,{})]});};export default NewsPage;","map":{"version":3,"names":["React","NewsFeed","jsx","_jsx","jsxs","_jsxs","NewsPage","style","maxWidth","margin","children"],"sources":["D:/Study/Course_rksp/frontend/src/pages/NewsPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import API from '../api';\r\n// import NewsForm from '../components/NewsForm';\r\n// import NewsList from '../components/NewsList';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const NewsPage = () => {\r\n//   const [news, setNews] = useState([]);\r\n//   const [recommendedNews, setRecommendedNews] = useState([]);\r\n//   const [userId, setUserId] = useState(localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user'))._id : null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchNews = async () => {\r\n//     try {\r\n//       const res = await API.get('/news');\r\n//       setNews(res.data);\r\n//     } catch (err) {\r\n//       alert('Ошибка при загрузке новостей');\r\n//     }\r\n//   };\r\n\r\n//   const fetchRecommendations = async () => {\r\n//     if (!userId) return;\r\n\r\n//     try {\r\n//       const res = await API.get(`/news/recommendations/${userId}`);\r\n//       setRecommendedNews(res.data);\r\n//     } catch (err) {\r\n//       alert('Ошибка при получении рекомендаций');\r\n//     }\r\n//   };\r\n\r\n//   const handleAdd = async (article) => {\r\n//     try {\r\n//       await API.post('/news', article);\r\n//       fetchNews();\r\n//     } catch (err) {\r\n//       alert('Не удалось добавить новость');\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/news/${id}`);\r\n//       fetchNews();\r\n//     } catch (err) {\r\n//       alert('Не удалось удалить новость');\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('token');\r\n//     localStorage.removeItem('user');\r\n//     navigate('/login');\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNews();\r\n//     fetchRecommendations();\r\n//   }, [userId]);\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 800, margin: 'auto' }}>\r\n//       <h2>Новости</h2>\r\n//       <button onClick={handleLogout}>Выйти</button>\r\n//       <button onClick={() => API.get('/1/journal').catch(console.error)}>\r\n//         Проверить доступ\r\n//         </button>\r\n\r\n//       <h3>Рекомендованные новости</h3>\r\n//       <NewsList \r\n//         news={news} \r\n//         onDelete={handleDelete}\r\n//         onAddToJournal={fetchRecommendations} // Обновляем рекомендации после добавления\r\n//         showAddButton={true}\r\n//         showDeleteButton={false}\r\n//         />\r\n\r\n//       <h3>Все новости</h3>\r\n//       <NewsForm onAdd={handleAdd} />\r\n//       <NewsList news={news} onDelete={handleDelete} userId={userId} />\r\n//     </div>\r\n    \r\n//   );\r\n// };\r\n\r\n// export default NewsPage;\r\n\r\n\r\nimport React from 'react';\r\nimport NewsFeed from '../components/NewsFeed';\r\n\r\nconst NewsPage = () => {\r\n  return (\r\n    <div style={{ maxWidth: 800, margin: 'auto' }}>\r\n      <h2>Новости</h2>\r\n      <NewsFeed />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,mBACED,KAAA,QAAKE,KAAK,CAAE,CAAEC,QAAQ,CAAE,GAAG,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,eAC5CP,IAAA,OAAAO,QAAA,CAAI,4CAAO,CAAI,CAAC,cAChBP,IAAA,CAACF,QAAQ,GAAE,CAAC,EACT,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}