{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Course_rksp\\\\frontend\\\\src\\\\components\\\\SearchNews.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from '../api';\nimport moment from 'moment';\nimport './NewsFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchNews = ({\n  onAddToJournal\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [lastPublishedAt, setLastPublishedAt] = useState(null);\n  const [searchAttempts, setSearchAttempts] = useState(0);\n  const MAX_ATTEMPTS = 30; // Максимум 30 попыток (дней назад)\n  const searchTimeoutRef = useRef(null);\n  const handleInitialSearch = async searchQuery => {\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setResults([]);\n    setSearchAttempts(0);\n    let currentDate = moment().format(\"YYYY-MM-DD\");\n    let attempts = 0;\n    let foundArticles = [];\n    while (attempts < MAX_ATTEMPTS && foundArticles.length === 0) {\n      try {\n        const response = await API.get('/api/news/search', {\n          params: {\n            q: searchQuery,\n            after: currentDate\n          }\n        });\n        foundArticles = response.data.articles || [];\n        if (foundArticles.length > 0) {\n          setResults(foundArticles);\n          setLastPublishedAt(currentDate);\n        } else {\n          currentDate = moment(currentDate).subtract(1, 'day').format(\"YYYY-MM-DD\");\n          attempts++;\n          setSearchAttempts(attempts);\n        }\n      } catch (err) {\n        console.error('Ошибка поиска:', err);\n        break;\n      }\n    }\n    setIsSearching(false);\n  };\n  const handleLoadMore = async () => {\n    if (!lastPublishedAt || isSearching || searchAttempts >= MAX_ATTEMPTS) return;\n    setIsSearching(true);\n    let currentDate = moment(lastPublishedAt).subtract(1, 'day').format(\"YYYY-MM-DD\");\n    let attempts = searchAttempts;\n    let foundArticles = [];\n    while (attempts < MAX_ATTEMPTS && foundArticles.length === 0) {\n      try {\n        const response = await API.get('/api/news/search', {\n          params: {\n            q: query,\n            after: currentDate\n          }\n        });\n        foundArticles = response.data.articles || [];\n        if (foundArticles.length > 0) {\n          // Убираем дубликаты по URL\n          const uniqueNew = foundArticles.filter(article => !results.some(a => a.url === article.url));\n          setResults(prev => [...prev, ...uniqueNew]);\n          setLastPublishedAt(currentDate);\n        } else {\n          currentDate = moment(currentDate).subtract(1, 'day').format(\"YYYY-MM-DD\");\n          attempts++;\n          setSearchAttempts(attempts);\n        }\n      } catch (err) {\n        console.error('Ошибка при загрузке новых статей:', err);\n        break;\n      }\n    }\n    setIsSearching(false);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setQuery(value);\n\n    // Очищаем предыдущий таймаут\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n    if (value.length > 2) {\n      searchTimeoutRef.current = setTimeout(() => handleInitialSearch(value), 1000);\n    } else {\n      setResults([]);\n      setLastPublishedAt(null);\n      setSearchAttempts(0);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed\",\n    children: [results.length > 0 && searchAttempts < MAX_ATTEMPTS && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        disabled: isSearching,\n        className: \"load-more-button\",\n        children: isSearching ? 'Загрузка...' : 'Показать ещё'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), !isSearching && results.length === 0 && query.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      children: searchAttempts >= MAX_ATTEMPTS ? \"Достигнут лимит поиска (30 дней назад)\" : \"Ничего не найдено\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchNews, \"JaZkXCjLQfqp1xlBAhsWnzhn4LI=\");\n_c = SearchNews;\nexport default SearchNews;\nvar _c;\n$RefreshReg$(_c, \"SearchNews\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API","moment","jsxDEV","_jsxDEV","SearchNews","onAddToJournal","_s","query","setQuery","results","setResults","isSearching","setIsSearching","lastPublishedAt","setLastPublishedAt","searchAttempts","setSearchAttempts","MAX_ATTEMPTS","searchTimeoutRef","handleInitialSearch","searchQuery","trim","currentDate","format","attempts","foundArticles","length","response","get","params","q","after","data","articles","subtract","err","console","error","handleLoadMore","uniqueNew","filter","article","some","a","url","prev","handleInputChange","e","value","target","current","clearTimeout","setTimeout","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Study/Course_rksp/frontend/src/components/SearchNews.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport API from '../api';\r\nimport moment from 'moment';\r\nimport './NewsFeed.css';\r\n\r\nconst SearchNews = ({ onAddToJournal }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [lastPublishedAt, setLastPublishedAt] = useState(null);\r\n  const [searchAttempts, setSearchAttempts] = useState(0);\r\n  const MAX_ATTEMPTS = 30; // Максимум 30 попыток (дней назад)\r\n  const searchTimeoutRef = useRef(null);\r\n\r\n  const handleInitialSearch = async (searchQuery) => {\r\n    if (!searchQuery.trim()) return;\r\n\r\n    setIsSearching(true);\r\n    setResults([]);\r\n    setSearchAttempts(0);\r\n    \r\n    let currentDate = moment().format(\"YYYY-MM-DD\");\r\n    let attempts = 0;\r\n    let foundArticles = [];\r\n\r\n    while (attempts < MAX_ATTEMPTS && foundArticles.length === 0) {\r\n      try {\r\n        const response = await API.get('/api/news/search', {\r\n          params: {\r\n            q: searchQuery,\r\n            after: currentDate,\r\n          }\r\n        });\r\n\r\n        foundArticles = response.data.articles || [];\r\n        \r\n        if (foundArticles.length > 0) {\r\n          setResults(foundArticles);\r\n          setLastPublishedAt(currentDate);\r\n        } else {\r\n          currentDate = moment(currentDate).subtract(1, 'day').format(\"YYYY-MM-DD\");\r\n          attempts++;\r\n          setSearchAttempts(attempts);\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка поиска:', err);\r\n        break;\r\n      }\r\n    }\r\n\r\n    setIsSearching(false);\r\n  };\r\n\r\n  const handleLoadMore = async () => {\r\n    if (!lastPublishedAt || isSearching || searchAttempts >= MAX_ATTEMPTS) return;\r\n\r\n    setIsSearching(true);\r\n    let currentDate = moment(lastPublishedAt).subtract(1, 'day').format(\"YYYY-MM-DD\");\r\n    let attempts = searchAttempts;\r\n    let foundArticles = [];\r\n\r\n    while (attempts < MAX_ATTEMPTS && foundArticles.length === 0) {\r\n      try {\r\n        const response = await API.get('/api/news/search', {\r\n          params: {\r\n            q: query,\r\n            after: currentDate,\r\n          }\r\n        });\r\n\r\n        foundArticles = response.data.articles || [];\r\n        \r\n        if (foundArticles.length > 0) {\r\n          // Убираем дубликаты по URL\r\n          const uniqueNew = foundArticles.filter(\r\n            article => !results.some(a => a.url === article.url)\r\n          );\r\n          \r\n          setResults(prev => [...prev, ...uniqueNew]);\r\n          setLastPublishedAt(currentDate);\r\n        } else {\r\n          currentDate = moment(currentDate).subtract(1, 'day').format(\"YYYY-MM-DD\");\r\n          attempts++;\r\n          setSearchAttempts(attempts);\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке новых статей:', err);\r\n        break;\r\n      }\r\n    }\r\n\r\n    setIsSearching(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n\r\n    // Очищаем предыдущий таймаут\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    if (value.length > 2) {\r\n      searchTimeoutRef.current = setTimeout(() => handleInitialSearch(value), 1000);\r\n    } else {\r\n      setResults([]);\r\n      setLastPublishedAt(null);\r\n      setSearchAttempts(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (searchTimeoutRef.current) {\r\n        clearTimeout(searchTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"news-feed\">\r\n      {/* Остальной JSX остается таким же, но обновим условие для кнопки */}\r\n      \r\n      {results.length > 0 && searchAttempts < MAX_ATTEMPTS && (\r\n        <div className=\"load-more-container\">\r\n          <button\r\n            onClick={handleLoadMore}\r\n            disabled={isSearching}\r\n            className=\"load-more-button\"\r\n          >\r\n            {isSearching ? 'Загрузка...' : 'Показать ещё'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!isSearching && results.length === 0 && query.length > 2 && (\r\n        <div className=\"no-results\">\r\n          {searchAttempts >= MAX_ATTEMPTS \r\n            ? \"Достигнут лимит поиска (30 дней назад)\" \r\n            : \"Ничего не найдено\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchNews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}