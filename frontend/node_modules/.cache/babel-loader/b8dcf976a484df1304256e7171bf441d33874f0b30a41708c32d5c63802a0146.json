{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Course_rksp\\\\frontend\\\\src\\\\components\\\\Recommendations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport { getSafeImageUrl } from '../utils/imageUtils';\nimport './NewsFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = ({\n  onAddToJournal\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [recPageSize] = useState(12);\n  const [refreshSeed, setRefreshSeed] = useState(0);\n\n  // Функция для генерации случайных тем (на основе журнала или фоллбэка)\n  const generateRandomQuery = journalData => {\n    if (!Array.isArray(journalData) || journalData.length === 0) {\n      return getFallbackQuery();\n    }\n    const fallbackTopics = ['technology', 'business', 'science', 'politics', 'sports', 'entertainment', 'health'];\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\n    return fallbackTopics[randomIndex];\n  };\n  const getFallbackQuery = () => {\n    const fallbackTopics = ['technology', 'business', 'science', 'politics', 'sports', 'entertainment', 'health'];\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\n    return fallbackTopics[randomIndex];\n  };\n  const fetchRecommendations = async () => {\n    try {\n      var _response$data;\n      const userId = localStorage.getItem('userId');\n      if (!userId) return;\n      setLoading(true);\n      setError('');\n\n      // Получаем журнал пользователя\n      const journalResponse = await API.get(`/api/news/${userId}/journal`);\n      setJournalEntries(journalResponse.data);\n\n      // Генерируем запрос на основе данных из журнала\n      const query = generateRandomQuery(journalResponse.data);\n\n      // Получаем рекомендации\n      const response = await API.get(`/api/news/recommendations/${userId}`, {\n        params: {\n          limit: recPageSize,\n          query: query,\n          seed: refreshSeed // <-- Это должно быть числом или строкой\n        }\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.recommendations) {\n        setRecommendations(response.data.recommendations);\n      }\n    } catch (err) {\n      console.error('Ошибка загрузки рекомендаций:', err);\n      setError('Не удалось загрузить рекомендации');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const refreshRecommendations = () => {\n    setRefreshSeed(Date.now()); // Меняем seed для нового запроса\n  };\n  const handleAddToJournal = async newsItem => {\n    try {\n      var _newsItem$source;\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('token');\n      if (!userId || !token) {\n        alert('Для добавления в журнал необходимо авторизоваться');\n        return;\n      }\n      const entryData = {\n        userId,\n        url: newsItem.url,\n        source: ((_newsItem$source = newsItem.source) === null || _newsItem$source === void 0 ? void 0 : _newsItem$source.name) || 'unknown',\n        title: newsItem.title || '',\n        description: newsItem.description || '',\n        content: newsItem.content || newsItem.description || '',\n        imageUrl: newsItem.urlToImage || newsItem.imageUrl || '',\n        publishedAt: newsItem.publishedAt || new Date().toISOString(),\n        author: newsItem.author || ''\n      };\n      await API.post('/api/news/journal', entryData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Новость успешно добавлена в журнал');\n      if (onAddToJournal) onAddToJournal();\n      fetchRecommendations(); // Обновляем рекомендации\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Ошибка добавления:', err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Ошибка при добавлении в журнал');\n    }\n  };\n  const handleRecImageError = index => {\n    setRecommendations(prevRecs => prevRecs.filter((_, i) => i !== index));\n  };\n  useEffect(() => {\n    fetchRecommendations();\n  }, [refreshSeed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"recommendations-title\",\n        children: [\"\\u0420\\u0435\\u043A\\u043E\\u043C\\u0435\\u043D\\u0434\\u0443\\u0435\\u043C \\u0432\\u0430\\u043C\", loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading-indicator\",\n          children: \" (\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshRecommendations,\n        className: \"refresh-button\",\n        disabled: loading,\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this) : !loading && recommendations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-recs\",\n      children: journalEntries.length > 0 ? 'Не удалось найти рекомендации. Попробуйте добавить больше новостей.' : 'Добавьте новости в журнал, чтобы получить рекомендации'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-grid\",\n      children: recommendations.map((item, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"recommendation-card\",\n        children: [item.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSafeImageUrl(item.imageUrl),\n            alt: item.title,\n            onError: () => handleRecImageError(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rec-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"rec-title\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rec-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rec-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"rec-link\",\n              children: \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddToJournal(item),\n                className: \"rec-add-button\",\n                children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, `rec-${index}-${refreshSeed}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"vsITBrbRAnImGQzOh3LoXCNeTnM=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","API","getSafeImageUrl","jsxDEV","_jsxDEV","Recommendations","onAddToJournal","_s","recommendations","setRecommendations","journalEntries","setJournalEntries","loading","setLoading","error","setError","recPageSize","refreshSeed","setRefreshSeed","generateRandomQuery","journalData","Array","isArray","length","getFallbackQuery","fallbackTopics","randomIndex","Math","floor","random","fetchRecommendations","_response$data","userId","localStorage","getItem","journalResponse","get","data","query","response","params","limit","seed","err","console","refreshRecommendations","Date","now","handleAddToJournal","newsItem","_newsItem$source","token","alert","entryData","url","source","name","title","description","content","imageUrl","urlToImage","publishedAt","toISOString","author","post","headers","Authorization","_err$response","_err$response$data","message","handleRecImageError","index","prevRecs","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","item","src","alt","onError","href","target","rel","_c","$RefreshReg$"],"sources":["D:/Study/Course_rksp/frontend/src/components/Recommendations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport { getSafeImageUrl } from '../utils/imageUtils';\r\nimport './NewsFeed.css';\r\n\r\nconst Recommendations = ({ onAddToJournal }) => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [recPageSize] = useState(12);\r\n  const [refreshSeed, setRefreshSeed] = useState(0);\r\n\r\n  // Функция для генерации случайных тем (на основе журнала или фоллбэка)\r\n  const generateRandomQuery = (journalData) => {\r\n    if (!Array.isArray(journalData) || journalData.length === 0) {\r\n      return getFallbackQuery();\r\n    }\r\n\r\n    const fallbackTopics = [\r\n      'technology',\r\n      'business',\r\n      'science',\r\n      'politics',\r\n      'sports',\r\n      'entertainment',\r\n      'health'\r\n    ];\r\n\r\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\r\n    return fallbackTopics[randomIndex];\r\n  };\r\n\r\n  const getFallbackQuery = () => {\r\n    const fallbackTopics = [\r\n      'technology',\r\n      'business',\r\n      'science',\r\n      'politics',\r\n      'sports',\r\n      'entertainment',\r\n      'health'\r\n    ];\r\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\r\n    return fallbackTopics[randomIndex];\r\n  };\r\n\r\n  const fetchRecommendations = async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) return;\r\n\r\n      setLoading(true);\r\n      setError('');\r\n\r\n      // Получаем журнал пользователя\r\n      const journalResponse = await API.get(`/api/news/${userId}/journal`);\r\n      setJournalEntries(journalResponse.data);\r\n\r\n      // Генерируем запрос на основе данных из журнала\r\n      const query = generateRandomQuery(journalResponse.data);\r\n\r\n      // Получаем рекомендации\r\n      const response = await API.get(`/api/news/recommendations/${userId}`, {\r\n        params: {\r\n          limit: recPageSize,\r\n          query: query,\r\n          seed: refreshSeed // <-- Это должно быть числом или строкой\r\n        }\r\n      });\r\n\r\n      if (response.data?.recommendations) {\r\n        setRecommendations(response.data.recommendations);\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки рекомендаций:', err);\r\n      setError('Не удалось загрузить рекомендации');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshRecommendations = () => {\r\n    setRefreshSeed(Date.now()); // Меняем seed для нового запроса\r\n  };\r\n\r\n  const handleAddToJournal = async (newsItem) => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!userId || !token) {\r\n        alert('Для добавления в журнал необходимо авторизоваться');\r\n        return;\r\n      }\r\n\r\n      const entryData = {\r\n        userId,\r\n        url: newsItem.url,\r\n        source: newsItem.source?.name || 'unknown',\r\n        title: newsItem.title || '',\r\n        description: newsItem.description || '',\r\n        content: newsItem.content || newsItem.description || '',\r\n        imageUrl: newsItem.urlToImage || newsItem.imageUrl || '',\r\n        publishedAt: newsItem.publishedAt || new Date().toISOString(),\r\n        author: newsItem.author || ''\r\n      };\r\n\r\n      await API.post('/api/news/journal', entryData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      alert('Новость успешно добавлена в журнал');\r\n      if (onAddToJournal) onAddToJournal();\r\n      fetchRecommendations(); // Обновляем рекомендации\r\n    } catch (err) {\r\n      console.error('Ошибка добавления:', err);\r\n      alert(err.response?.data?.message || 'Ошибка при добавлении в журнал');\r\n    }\r\n  };\r\n\r\n  const handleRecImageError = (index) => {\r\n    setRecommendations((prevRecs) => prevRecs.filter((_, i) => i !== index));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRecommendations();\r\n  }, [refreshSeed]);\r\n\r\n  return (\r\n    <div className=\"recommendations-section\">\r\n      <div className=\"recommendations-header\">\r\n        <h2 className=\"recommendations-title\">\r\n          Рекомендуем вам\r\n          {loading && <span className=\"loading-indicator\"> (загрузка...)</span>}\r\n        </h2>\r\n        <button\r\n          onClick={refreshRecommendations}\r\n          className=\"refresh-button\"\r\n          disabled={loading}\r\n        >\r\n          Показать другие\r\n        </button>\r\n      </div>\r\n\r\n      {error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : !loading && recommendations.length === 0 ? (\r\n        <p className=\"no-recs\">\r\n          {journalEntries.length > 0\r\n            ? 'Не удалось найти рекомендации. Попробуйте добавить больше новостей.'\r\n            : 'Добавьте новости в журнал, чтобы получить рекомендации'}\r\n        </p>\r\n      ) : (\r\n        <div className=\"recommendations-grid\">\r\n          {recommendations.map((item, index) => (\r\n            <article key={`rec-${index}-${refreshSeed}`} className=\"recommendation-card\">\r\n              {item.imageUrl && (\r\n                <div className=\"image-container\">\r\n                  <img\r\n                    src={getSafeImageUrl(item.imageUrl)}\r\n                    alt={item.title}\r\n                    onError={() => handleRecImageError(index)}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"rec-content\">\r\n                <h3 className=\"rec-title\">{item.title}</h3>\r\n                <p className=\"rec-description\">{item.description}</p>\r\n                <div className=\"rec-footer\">\r\n                  <a\r\n                    href={item.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"rec-link\"\r\n                  >\r\n                    Читать\r\n                  </a>\r\n                  <div className=\"rec-actions\">\r\n                    <button\r\n                      onClick={() => handleAddToJournal(item)}\r\n                      className=\"rec-add-button\"\r\n                    >\r\n                      Сохранить\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}