{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Course_rksp\\\\frontend\\\\src\\\\components\\\\SearchNews.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API from '../api';\nimport moment from 'moment';\nimport './NewsFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchNews = ({\n  onAddToJournal\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [lastPublishedAt, setLastPublishedAt] = useState(moment().toISOString());\n  const [searchAttempts, setSearchAttempts] = useState(0);\n  const MAX_EMPTY_ATTEMPTS = 30; // Максимум 30 дней назад без результатов\n  const searchTimeoutRef = useRef(null);\n  const fetchArticles = async (searchQuery, date) => {\n    try {\n      const response = await API.get('/api/news/search', {\n        params: {\n          q: searchQuery,\n          after: date\n        }\n      });\n      return response.data.articles || [];\n    } catch (err) {\n      console.error('Ошибка поиска:', err);\n      return [];\n    }\n  };\n  const handleInitialSearch = async searchQuery => {\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setResults([]);\n    setLastPublishedAt(moment().toISOString());\n    setSearchAttempts(0);\n    let currentDate = moment().toISOString();\n    let attempts = 0;\n    let foundArticles = [];\n    while (attempts < MAX_EMPTY_ATTEMPTS && foundArticles.length === 0) {\n      const articles = await fetchArticles(searchQuery, currentDate);\n      foundArticles = articles;\n      if (articles.length > 0) {\n        const lastDate = articles[articles.length - 1].publishedAt;\n        setLastPublishedAt(lastDate);\n      } else {\n        currentDate = moment(currentDate).subtract(1, 'day').toISOString();\n        attempts++;\n        setSearchAttempts(attempts);\n      }\n    }\n    setResults(foundArticles);\n    setIsSearching(false);\n  };\n  const handleLoadMore = async () => {\n    if (isSearching || searchAttempts >= MAX_EMPTY_ATTEMPTS) return;\n    setIsSearching(true);\n    let currentDate = moment(lastPublishedAt).subtract(1, 'day').toISOString();\n    let attempts = searchAttempts;\n    let foundArticles = [];\n    while (attempts < MAX_EMPTY_ATTEMPTS && foundArticles.length === 0) {\n      const articles = await fetchArticles(query, currentDate);\n      foundArticles = articles;\n      if (articles.length > 0) {\n        const lastDate = articles[articles.length - 1].publishedAt;\n        setLastPublishedAt(lastDate);\n\n        // Убираем дубликаты по URL\n        const uniqueNew = articles.filter(article => !results.some(a => a.url === article.url));\n        setResults(prev => [...prev, ...uniqueNew]);\n      } else {\n        currentDate = moment(currentDate).subtract(1, 'day').toISOString();\n        attempts++;\n        setSearchAttempts(attempts);\n      }\n    }\n    setIsSearching(false);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setQuery(value);\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n    if (value.length > 2) {\n      searchTimeoutRef.current = setTimeout(() => handleInitialSearch(value), 1000);\n    } else {\n      setResults([]);\n      setLastPublishedAt(moment().toISOString());\n      setSearchAttempts(0);\n    }\n  };\n  useEffect(() => {\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-feed\",\n    children: [results.length > 0 && searchAttempts < MAX_EMPTY_ATTEMPTS && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load-more-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMore,\n        disabled: isSearching,\n        className: \"load-more-button\",\n        children: isSearching ? 'Загрузка...' : 'Показать ещё'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), !isSearching && results.length === 0 && query.length > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      children: searchAttempts >= MAX_EMPTY_ATTEMPTS ? \"Достигнут лимит поиска (30 дней назад)\" : \"Ничего не найдено\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchNews, \"kYR+K0xJNgDb6n3XSzC8xNlL5qw=\");\n_c = SearchNews;\nexport default SearchNews;\nvar _c;\n$RefreshReg$(_c, \"SearchNews\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API","moment","jsxDEV","_jsxDEV","SearchNews","onAddToJournal","_s","query","setQuery","results","setResults","isSearching","setIsSearching","lastPublishedAt","setLastPublishedAt","toISOString","searchAttempts","setSearchAttempts","MAX_EMPTY_ATTEMPTS","searchTimeoutRef","fetchArticles","searchQuery","date","response","get","params","q","after","data","articles","err","console","error","handleInitialSearch","trim","currentDate","attempts","foundArticles","length","lastDate","publishedAt","subtract","handleLoadMore","uniqueNew","filter","article","some","a","url","prev","handleInputChange","e","value","target","current","clearTimeout","setTimeout","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Study/Course_rksp/frontend/src/components/SearchNews.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport API from '../api';\r\nimport moment from 'moment';\r\nimport './NewsFeed.css';\r\n\r\nconst SearchNews = ({ onAddToJournal }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [lastPublishedAt, setLastPublishedAt] = useState(moment().toISOString());\r\n  const [searchAttempts, setSearchAttempts] = useState(0);\r\n  const MAX_EMPTY_ATTEMPTS = 30; // Максимум 30 дней назад без результатов\r\n  const searchTimeoutRef = useRef(null);\r\n\r\n  const fetchArticles = async (searchQuery, date) => {\r\n    try {\r\n      const response = await API.get('/api/news/search', {\r\n        params: {\r\n          q: searchQuery,\r\n          after: date,\r\n        }\r\n      });\r\n      return response.data.articles || [];\r\n    } catch (err) {\r\n      console.error('Ошибка поиска:', err);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const handleInitialSearch = async (searchQuery) => {\r\n    if (!searchQuery.trim()) return;\r\n\r\n    setIsSearching(true);\r\n    setResults([]);\r\n    setLastPublishedAt(moment().toISOString());\r\n    setSearchAttempts(0);\r\n\r\n    let currentDate = moment().toISOString();\r\n    let attempts = 0;\r\n    let foundArticles = [];\r\n\r\n    while (attempts < MAX_EMPTY_ATTEMPTS && foundArticles.length === 0) {\r\n      const articles = await fetchArticles(searchQuery, currentDate);\r\n      foundArticles = articles;\r\n      \r\n      if (articles.length > 0) {\r\n        const lastDate = articles[articles.length - 1].publishedAt;\r\n        setLastPublishedAt(lastDate);\r\n      } else {\r\n        currentDate = moment(currentDate).subtract(1, 'day').toISOString();\r\n        attempts++;\r\n        setSearchAttempts(attempts);\r\n      }\r\n    }\r\n\r\n    setResults(foundArticles);\r\n    setIsSearching(false);\r\n  };\r\n\r\n  const handleLoadMore = async () => {\r\n    if (isSearching || searchAttempts >= MAX_EMPTY_ATTEMPTS) return;\r\n\r\n    setIsSearching(true);\r\n    let currentDate = moment(lastPublishedAt).subtract(1, 'day').toISOString();\r\n    let attempts = searchAttempts;\r\n    let foundArticles = [];\r\n\r\n    while (attempts < MAX_EMPTY_ATTEMPTS && foundArticles.length === 0) {\r\n      const articles = await fetchArticles(query, currentDate);\r\n      foundArticles = articles;\r\n      \r\n      if (articles.length > 0) {\r\n        const lastDate = articles[articles.length - 1].publishedAt;\r\n        setLastPublishedAt(lastDate);\r\n        \r\n        // Убираем дубликаты по URL\r\n        const uniqueNew = articles.filter(\r\n          article => !results.some(a => a.url === article.url)\r\n        );\r\n        \r\n        setResults(prev => [...prev, ...uniqueNew]);\r\n      } else {\r\n        currentDate = moment(currentDate).subtract(1, 'day').toISOString();\r\n        attempts++;\r\n        setSearchAttempts(attempts);\r\n      }\r\n    }\r\n\r\n    setIsSearching(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    if (value.length > 2) {\r\n      searchTimeoutRef.current = setTimeout(() => handleInitialSearch(value), 1000);\r\n    } else {\r\n      setResults([]);\r\n      setLastPublishedAt(moment().toISOString());\r\n      setSearchAttempts(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (searchTimeoutRef.current) {\r\n        clearTimeout(searchTimeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"news-feed\">\r\n      {/* ... остальной JSX остается таким же */}\r\n      \r\n      {results.length > 0 && searchAttempts < MAX_EMPTY_ATTEMPTS && (\r\n        <div className=\"load-more-container\">\r\n          <button\r\n            onClick={handleLoadMore}\r\n            disabled={isSearching}\r\n            className=\"load-more-button\"\r\n          >\r\n            {isSearching ? 'Загрузка...' : 'Показать ещё'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {!isSearching && results.length === 0 && query.length > 2 && (\r\n        <div className=\"no-results\">\r\n          {searchAttempts >= MAX_EMPTY_ATTEMPTS \r\n            ? \"Достигнут лимит поиска (30 дней назад)\" \r\n            : \"Ничего не найдено\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchNews;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}