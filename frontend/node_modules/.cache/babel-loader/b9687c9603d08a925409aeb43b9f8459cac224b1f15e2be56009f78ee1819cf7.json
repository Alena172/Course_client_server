{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Course_rksp\\\\frontend\\\\src\\\\components\\\\Recommendations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport API from '../api';\nimport { getSafeImageUrl } from '../utils/imageUtils';\nimport './NewsFeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = ({\n  onAddToJournal\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = useState([]);\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [recPageSize] = useState(12);\n  const [refreshSeed, setRefreshSeed] = useState(0);\n\n  // Функция для извлечения ключевых слов с учетом весов\n  const extractKeywordsWithWeights = (title = '', description = '') => {\n    const text = `${title} ${description}`.toLowerCase();\n    const stopWords = new Set(['the', 'and', 'for', 'with', 'this', 'that', 'are', 'was']);\n    const words = text.split(/\\W+/).filter(word => word.length > 3 && !stopWords.has(word));\n    const keywordFrequency = {};\n    words.forEach(word => {\n      keywordFrequency[word] = (keywordFrequency[word] || 0) + 1;\n    });\n    return Object.entries(keywordFrequency).sort((a, b) => b[1] - a[1]).map(([word, count]) => ({\n      word,\n      weight: count\n    }));\n  };\n\n  // Функция для генерации случайных комбинаций ключевых слов\n  const generateRandomQuery = keywordsWithWeights => {\n    if (keywordsWithWeights.length === 0) {\n      return getFallbackQuery();\n    }\n\n    // Сортируем ключевые слова по весу\n    const sortedKeywords = [...keywordsWithWeights].sort((a, b) => b.weight - a.weight);\n\n    // Берем 3 самых популярных ключевых слова\n    const topKeywords = sortedKeywords.slice(0, 3).map(k => k.word);\n\n    // Добавляем 1-2 случайных ключевых слова из оставшихся\n    const otherKeywords = sortedKeywords.slice(3);\n    if (otherKeywords.length > 0) {\n      const randomIndex = Math.floor(Math.random() * otherKeywords.length);\n      topKeywords.push(otherKeywords[randomIndex].word);\n      if (otherKeywords.length > 1 && Math.random() > 0.5) {\n        const secondRandomIndex = (randomIndex + 1) % otherKeywords.length;\n        topKeywords.push(otherKeywords[secondRandomIndex].word);\n      }\n    }\n\n    // Перемешиваем ключевые слова для разнообразия\n    const shuffled = [...topKeywords].sort(() => Math.random() - 0.5);\n\n    // Формируем запрос с 2-3 ключевыми словами\n    const queryLength = Math.min(2 + Math.floor(Math.random() * 2), shuffled.length);\n    return shuffled.slice(0, queryLength).join(' OR ');\n  };\n  const getFallbackQuery = () => {\n    const fallbackTopics = ['technology', 'business', 'science', 'politics', 'sports', 'entertainment', 'health'];\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\n    return fallbackTopics[randomIndex];\n  };\n  const fetchRecommendations = async () => {\n    try {\n      const userId = localStorage.getItem('userId');\n      if (!userId) return;\n      setLoading(true);\n      setError('');\n\n      // Сначала получаем журнал пользователя для анализа ключевых слов\n      const journalResponse = await API.get(`/api/news/${userId}/journal`);\n      setJournalEntries(journalResponse.data);\n\n      // Извлекаем ключевые слова из всех записей журнала\n      const allKeywords = journalResponse.data.reduce((acc, item) => {\n        const keywords = extractKeywordsWithWeights(item.title, item.description);\n        return [...acc, ...keywords];\n      }, []);\n\n      // Группируем и суммируем веса одинаковых ключевых слов\n      const keywordWeights = {};\n      allKeywords.forEach(({\n        word,\n        weight\n      }) => {\n        keywordWeights[word] = (keywordWeights[word] || 0) + weight;\n      });\n\n      // Преобразуем обратно в массив объектов\n      const aggregatedKeywords = Object.entries(keywordWeights).map(([word, weight]) => ({\n        word,\n        weight\n      }));\n\n      // Генерируем случайный запрос на основе ключевых слов\n      const query = journalResponse.data.length > 0 ? generateRandomQuery(aggregatedKeywords) : getFallbackQuery();\n\n      // Получаем рекомендации с новым запросом\n      const response = await API.get(`/api/news/recommendations/${userId}`, {\n        params: {\n          limit: recPageSize,\n          query: query,\n          seed: refreshSeed // Добавляем seed для гарантии нового ответа от сервера\n        }\n      });\n      if (response.data) {\n        setRecommendations(response.data.recommendations);\n      }\n    } catch (err) {\n      console.error('Ошибка загрузки рекомендаций:', err);\n      setError('Не удалось загрузить рекомендации');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const refreshRecommendations = () => {\n    // Изменяем seed чтобы гарантировать новый запрос к API\n    setRefreshSeed(Date.now());\n  };\n  const handleAddToJournal = async newsItem => {\n    try {\n      var _newsItem$source;\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('token');\n      if (!userId || !token) {\n        alert('Для добавления в журнал необходимо авторизоваться');\n        return;\n      }\n      const entryData = {\n        userId,\n        url: newsItem.url,\n        source: ((_newsItem$source = newsItem.source) === null || _newsItem$source === void 0 ? void 0 : _newsItem$source.name) || 'unknown',\n        title: newsItem.title || '',\n        description: newsItem.description || '',\n        content: newsItem.content || newsItem.description || '',\n        imageUrl: newsItem.urlToImage || newsItem.imageUrl || '',\n        publishedAt: newsItem.publishedAt || new Date().toISOString(),\n        author: newsItem.author || ''\n      };\n      await API.post('/api/news/journal', entryData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Новость успешно добавлена в журнал');\n      if (onAddToJournal) onAddToJournal();\n      fetchRecommendations();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Ошибка добавления:', err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Ошибка при добавлении в журнал');\n    }\n  };\n  useEffect(() => {\n    fetchRecommendations();\n  }, [refreshSeed]);\n  const handleRecImageError = index => {\n    setRecommendations(prevRecs => prevRecs.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"recommendations-title\",\n        children: [\"\\u0420\\u0435\\u043A\\u043E\\u043C\\u0435\\u043D\\u0434\\u0443\\u0435\\u043C \\u0432\\u0430\\u043C\", loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading-indicator\",\n          children: \" (\\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshRecommendations,\n        className: \"refresh-button\",\n        disabled: loading,\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u0440\\u0443\\u0433\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : !loading && recommendations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-recs\",\n      children: journalEntries.length > 0 ? \"Не удалось найти рекомендации. Попробуйте добавить больше новостей.\" : \"Добавьте новости в журнал, чтобы получить рекомендации\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendations-grid\",\n      children: recommendations.map((item, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"recommendation-card\",\n        children: [item.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSafeImageUrl(item.imageUrl),\n            alt: item.title,\n            onError: () => handleRecImageError(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rec-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"rec-title\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rec-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rec-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"rec-link\",\n              children: \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rec-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddToJournal(item),\n                className: \"rec-add-button\",\n                children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, `rec-${index}-${refreshSeed}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"vsITBrbRAnImGQzOh3LoXCNeTnM=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","useEffect","API","getSafeImageUrl","jsxDEV","_jsxDEV","Recommendations","onAddToJournal","_s","recommendations","setRecommendations","journalEntries","setJournalEntries","loading","setLoading","error","setError","recPageSize","refreshSeed","setRefreshSeed","extractKeywordsWithWeights","title","description","text","toLowerCase","stopWords","Set","words","split","filter","word","length","has","keywordFrequency","forEach","Object","entries","sort","a","b","map","count","weight","generateRandomQuery","keywordsWithWeights","getFallbackQuery","sortedKeywords","topKeywords","slice","k","otherKeywords","randomIndex","Math","floor","random","push","secondRandomIndex","shuffled","queryLength","min","join","fallbackTopics","fetchRecommendations","userId","localStorage","getItem","journalResponse","get","data","allKeywords","reduce","acc","item","keywords","keywordWeights","aggregatedKeywords","query","response","params","limit","seed","err","console","refreshRecommendations","Date","now","handleAddToJournal","newsItem","_newsItem$source","token","alert","entryData","url","source","name","content","imageUrl","urlToImage","publishedAt","toISOString","author","post","headers","Authorization","_err$response","_err$response$data","message","handleRecImageError","index","prevRecs","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","src","alt","onError","href","target","rel","_c","$RefreshReg$"],"sources":["D:/Study/Course_rksp/frontend/src/components/Recommendations.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport API from '../api';\r\nimport { getSafeImageUrl } from '../utils/imageUtils';\r\nimport './NewsFeed.css';\r\n\r\nconst Recommendations = ({ onAddToJournal }) => {\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [recPageSize] = useState(12);\r\n  const [refreshSeed, setRefreshSeed] = useState(0);\r\n\r\n  // Функция для извлечения ключевых слов с учетом весов\r\n  const extractKeywordsWithWeights = (title = '', description = '') => {\r\n    const text = `${title} ${description}`.toLowerCase();\r\n    const stopWords = new Set(['the', 'and', 'for', 'with', 'this', 'that', 'are', 'was']);\r\n    \r\n    const words = text.split(/\\W+/)\r\n      .filter(word => word.length > 3 && !stopWords.has(word));\r\n    \r\n    const keywordFrequency = {};\r\n    words.forEach(word => {\r\n      keywordFrequency[word] = (keywordFrequency[word] || 0) + 1;\r\n    });\r\n    \r\n    return Object.entries(keywordFrequency)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map(([word, count]) => ({ word, weight: count }));\r\n  };\r\n\r\n  // Функция для генерации случайных комбинаций ключевых слов\r\n  const generateRandomQuery = (keywordsWithWeights) => {\r\n    if (keywordsWithWeights.length === 0) {\r\n      return getFallbackQuery();\r\n    }\r\n\r\n    // Сортируем ключевые слова по весу\r\n    const sortedKeywords = [...keywordsWithWeights].sort((a, b) => b.weight - a.weight);\r\n    \r\n    // Берем 3 самых популярных ключевых слова\r\n    const topKeywords = sortedKeywords.slice(0, 3).map(k => k.word);\r\n    \r\n    // Добавляем 1-2 случайных ключевых слова из оставшихся\r\n    const otherKeywords = sortedKeywords.slice(3);\r\n    if (otherKeywords.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * otherKeywords.length);\r\n      topKeywords.push(otherKeywords[randomIndex].word);\r\n      \r\n      if (otherKeywords.length > 1 && Math.random() > 0.5) {\r\n        const secondRandomIndex = (randomIndex + 1) % otherKeywords.length;\r\n        topKeywords.push(otherKeywords[secondRandomIndex].word);\r\n      }\r\n    }\r\n    \r\n    // Перемешиваем ключевые слова для разнообразия\r\n    const shuffled = [...topKeywords].sort(() => Math.random() - 0.5);\r\n    \r\n    // Формируем запрос с 2-3 ключевыми словами\r\n    const queryLength = Math.min(2 + Math.floor(Math.random() * 2), shuffled.length);\r\n    return shuffled.slice(0, queryLength).join(' OR ');\r\n  };\r\n\r\n  const getFallbackQuery = () => {\r\n    const fallbackTopics = [\r\n      'technology',\r\n      'business',\r\n      'science',\r\n      'politics',\r\n      'sports',\r\n      'entertainment',\r\n      'health'\r\n    ];\r\n    const randomIndex = Math.floor(Math.random() * fallbackTopics.length);\r\n    return fallbackTopics[randomIndex];\r\n  };\r\n\r\n  const fetchRecommendations = async () => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) return;\r\n      \r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Сначала получаем журнал пользователя для анализа ключевых слов\r\n      const journalResponse = await API.get(`/api/news/${userId}/journal`);\r\n      setJournalEntries(journalResponse.data);\r\n      \r\n      // Извлекаем ключевые слова из всех записей журнала\r\n      const allKeywords = journalResponse.data.reduce((acc, item) => {\r\n        const keywords = extractKeywordsWithWeights(item.title, item.description);\r\n        return [...acc, ...keywords];\r\n      }, []);\r\n      \r\n      // Группируем и суммируем веса одинаковых ключевых слов\r\n      const keywordWeights = {};\r\n      allKeywords.forEach(({ word, weight }) => {\r\n        keywordWeights[word] = (keywordWeights[word] || 0) + weight;\r\n      });\r\n      \r\n      // Преобразуем обратно в массив объектов\r\n      const aggregatedKeywords = Object.entries(keywordWeights)\r\n        .map(([word, weight]) => ({ word, weight }));\r\n      \r\n      // Генерируем случайный запрос на основе ключевых слов\r\n      const query = journalResponse.data.length > 0 \r\n        ? generateRandomQuery(aggregatedKeywords)\r\n        : getFallbackQuery();\r\n      \r\n      // Получаем рекомендации с новым запросом\r\n      const response = await API.get(`/api/news/recommendations/${userId}`, {\r\n        params: {\r\n          limit: recPageSize,\r\n          query: query,\r\n          seed: refreshSeed // Добавляем seed для гарантии нового ответа от сервера\r\n        }\r\n      });\r\n      \r\n      if (response.data) {\r\n        setRecommendations(response.data.recommendations);\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка загрузки рекомендаций:', err);\r\n      setError('Не удалось загрузить рекомендации');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const refreshRecommendations = () => {\r\n    // Изменяем seed чтобы гарантировать новый запрос к API\r\n    setRefreshSeed(Date.now());\r\n  };\r\n\r\n  const handleAddToJournal = async (newsItem) => {\r\n    try {\r\n      const userId = localStorage.getItem('userId');\r\n      const token = localStorage.getItem('token');\r\n      if (!userId || !token) {\r\n        alert('Для добавления в журнал необходимо авторизоваться');\r\n        return;\r\n      }\r\n      \r\n    const entryData = {\r\n      userId,\r\n      url: newsItem.url,\r\n      source: newsItem.source?.name || 'unknown',\r\n      title: newsItem.title || '',\r\n      description: newsItem.description || '',\r\n      content: newsItem.content || newsItem.description || '',\r\n      imageUrl: newsItem.urlToImage || newsItem.imageUrl || '',\r\n      publishedAt: newsItem.publishedAt || new Date().toISOString(),\r\n      author: newsItem.author || ''\r\n    };\r\n      \r\n      await API.post('/api/news/journal', entryData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      alert('Новость успешно добавлена в журнал');\r\n      if (onAddToJournal) onAddToJournal();\r\n      fetchRecommendations();\r\n    } catch (err) {\r\n      console.error('Ошибка добавления:', err);\r\n      alert(err.response?.data?.message || 'Ошибка при добавлении в журнал');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRecommendations();\r\n  }, [refreshSeed]);\r\n\r\n\r\n  const handleRecImageError = (index) => {\r\n    setRecommendations(prevRecs => prevRecs.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div className=\"recommendations-section\">\r\n      <div className=\"recommendations-header\">\r\n        <h2 className=\"recommendations-title\">\r\n          Рекомендуем вам\r\n          {loading && <span className=\"loading-indicator\"> (загрузка...)</span>}\r\n        </h2>\r\n        <button \r\n          onClick={refreshRecommendations}\r\n          className=\"refresh-button\"\r\n          disabled={loading}\r\n        >\r\n          Показать другие\r\n        </button>\r\n      </div>\r\n      \r\n      {error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : !loading && recommendations.length === 0 ? (\r\n        <p className=\"no-recs\">\r\n          {journalEntries.length > 0 \r\n            ? \"Не удалось найти рекомендации. Попробуйте добавить больше новостей.\"\r\n            : \"Добавьте новости в журнал, чтобы получить рекомендации\"}\r\n        </p>\r\n      ) : (\r\n        <div className=\"recommendations-grid\">\r\n          {recommendations.map((item, index) => (\r\n            <article key={`rec-${index}-${refreshSeed}`} className=\"recommendation-card\">\r\n              {item.imageUrl && (\r\n                <div className=\"image-container\">\r\n                  <img \r\n                    src={getSafeImageUrl(item.imageUrl)} \r\n                    alt={item.title}\r\n                    onError={() => handleRecImageError(index)}\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"rec-content\">\r\n                <h3 className=\"rec-title\">{item.title}</h3>\r\n                <p className=\"rec-description\">{item.description}</p>\r\n                <div className=\"rec-footer\">\r\n                  <a \r\n                    href={item.url} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"rec-link\"\r\n                  >\r\n                    Читать\r\n                  </a>\r\n                  <div className=\"rec-actions\">\r\n                    <button \r\n                      onClick={() => handleAddToJournal(item)}\r\n                      className=\"rec-add-button\"\r\n                    >\r\n                      Сохранить\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}