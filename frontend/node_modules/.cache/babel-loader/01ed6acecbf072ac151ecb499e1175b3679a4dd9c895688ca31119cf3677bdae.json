{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0420\\u041A\\u0421\\u041F_\\u043A\\u0443\\u0440\\u0441\\u0430\\u0447\\\\frontend\\\\src\\\\pages\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../api';\nimport NewsList from '../components/NewsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [journalNews, setJournalNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchJournal = async () => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) {\n          navigate('/login');\n          return;\n        }\n        const response = await API.get(`/users/${user._id}/journal`);\n        setJournalNews(response.data);\n      } catch (err) {\n        console.error('Ошибка загрузки журнала:', err);\n        alert('Не удалось загрузить журнал новостей');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJournal();\n  }, [navigate]);\n  const handleRemoveFromJournal = async newsId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await API.delete(`/users/${user._id}/journal/${newsId}`);\n\n      // Обновляем список после удаления\n      setJournalNews(journalNews.filter(news => news._id !== newsId));\n      alert('Новость удалена из журнала');\n    } catch (err) {\n      console.error('Ошибка удаления:', err);\n      alert('Не удалось удалить новость из журнала');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: 'auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u043E\\u0439 \\u0436\\u0443\\u0440\\u043D\\u0430\\u043B \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), journalNews.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u0430\\u0448 \\u0436\\u0443\\u0440\\u043D\\u0430\\u043B \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043F\\u0443\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NewsList, {\n      news: journalNews,\n      onDelete: handleRemoveFromJournal,\n      showRemoveButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"pakFJfdteZIdBgS2tS545OTIl1g=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","API","NewsList","jsxDEV","_jsxDEV","ProfilePage","_s","journalNews","setJournalNews","loading","setLoading","navigate","fetchJournal","user","JSON","parse","localStorage","getItem","response","get","_id","data","err","console","error","alert","handleRemoveFromJournal","newsId","delete","filter","news","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","length","onDelete","showRemoveButton","_c","$RefreshReg$"],"sources":["C:/РКСП_курсач/frontend/src/pages/ProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../api';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst ProfilePage = () => {\r\n  const [journalNews, setJournalNews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchJournal = async () => {\r\n      try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (!user) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n\r\n        const response = await API.get(`/users/${user._id}/journal`);\r\n        setJournalNews(response.data);\r\n      } catch (err) {\r\n        console.error('Ошибка загрузки журнала:', err);\r\n        alert('Не удалось загрузить журнал новостей');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchJournal();\r\n  }, [navigate]);\r\n\r\n  const handleRemoveFromJournal = async (newsId) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      await API.delete(`/users/${user._id}/journal/${newsId}`);\r\n      \r\n      // Обновляем список после удаления\r\n      setJournalNews(journalNews.filter(news => news._id !== newsId));\r\n      alert('Новость удалена из журнала');\r\n    } catch (err) {\r\n      console.error('Ошибка удаления:', err);\r\n      alert('Не удалось удалить новость из журнала');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Загрузка...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: 800, margin: 'auto', padding: '20px' }}>\r\n      <h2>Мой журнал новостей</h2>\r\n      {journalNews.length === 0 ? (\r\n        <p>Ваш журнал новостей пуст</p>\r\n      ) : (\r\n        <NewsList \r\n          news={journalNews} \r\n          onDelete={handleRemoveFromJournal}\r\n          showRemoveButton={true}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ProfilePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}